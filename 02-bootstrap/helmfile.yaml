repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: argo
    url: https://argoproj.github.io/argo-helm
  - name: longhorn
    url: https://charts.longhorn.io
  - name: metrics-server
    url: https://kubernetes-sigs.github.io/metrics-server
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts

releases:
  - name: metrics-server
    namespace: kube-system
    chart: metrics-server/metrics-server
    version: 3.12.1
    values:
      - args:
          - --kubelet-insecure-tls

  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    version: 1.16.2
    createNamespace: true
    values:
      - crds:
          enabled: true

  - name: ingress-nginx
    namespace: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    version: 4.10.1
    createNamespace: true
    values:
      - controller:
          service:
            type: LoadBalancer

  - name: argocd
    namespace: argocd
    chart: argo/argo-cd
    version: 7.7.7
    createNamespace: true
    values:
      - configs:
          cm:
            kustomize.buildOptions: "--enable-helm"

  - name: longhorn
    namespace: longhorn-system
    chart: longhorn/longhorn
    version: 1.8.1
    createNamespace: false
    hooks:
      - events: [ "post-install" ]
        showlogs: true
        command: kubectl
        args:
          - patch
          - settings.longhorn.io
          - replica-count
          - --type=merge
          - -p
          - '{"value": "2"}'

  - name: kube-prometheus-stack
    namespace: monitoring
    chart: prometheus-community/kube-prometheus-stack
    version: 56.6.2
    createNamespace: true
    values:
      - crds:
          enabled: true
        kubeEtcd:
          enabled: false
        prometheus:
          prometheusSpec:
            maximumStartupDurationSeconds: 180
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: [ "ReadWriteOnce" ]
                  resources:
                    requests:
                      storage: 10Gi
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
        grafana:
          defaultDatasourceUid: prometheus
          additionalDataSources:
            - name: Prometheus
              type: prometheus
              uid: prometheus
              access: proxy
              url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            - name: Tempo
              type: tempo
              uid: tempo
              access: proxy
              url: http://tempo.monitoring.svc.cluster.local:3100
            - name: Loki
              type: loki
              uid: loki
              access: proxy
              url: http://loki-stack.monitoring.svc.cluster.local:3100